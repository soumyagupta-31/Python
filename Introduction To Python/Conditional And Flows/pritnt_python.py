# -*- coding: utf-8 -*-
"""pritnt_python

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UpC1bgsKPqWTcPVnmW-UCMPIOIlza2cp
"""

print('hello world')

"""1). int"""

print(100000)
print(100)
print(0)
print(-10)
print(-1234567)

"""2). type"""

print(type(123122))

print(100000.0)
print(100.8)
print(0.0)
print(-10.9)
print(-123456.97)
print(type(0.0))

"""3). string"""

print("a")
print('Soumya Gupta')
print('this is a class by gfg')
print(type('this is a class by gfg'))
print(type('1'))

"""4). boolean"""

print(True)
print(False)
print(type(True))

"""5). functionanlities in print statement"""

print('a')
 print('b')
 print('c')
 print('a', 'b' , 'c')
 print('a', 2 , 'c')

print('a', end = ' ')
 print('b', end = ' - ')
 print('c', end = ' * ')
 print('a', 'b' , 'c' , sep = '-------')

"""6). airthmetic operators

a) addition
"""

print(2 + 3)
print(2.5 + 3.5)
print(2.5 + 3)
print(2.5 + 3)
print(True + True)
print(True + False)
print('ashish' + 'jangra')

"""b). subtraction"""

print(2 - 3)
print(2.5 - 3.5)
print(2.5 - 3)
print(2.5 - 3)
print(True - True)
print(True - False)

"""c). multiplication"""

print(2 * 3)
print(2.5 *  3.5)
print(2.5 + 3)
print(True * True)
print(True * False)
print('------')

"""d). division"""

print(2 / 3)
print(2.5 /  3.5)
print(2.5 / 3)

"""e). floor division"""

print(2 // 3)
print(2.5 // 5.0)
print(2.5 // 1)

"""f). modulo"""

print(3 % 2)
print(2.5 % 5.0)
print(2.5 % 1)

"""g). exponentiation"""

print(3 ** 2)
print(2.5 ** 5.0)
print(2.5 ** 1)

"""h). absolute"""

print(abs(-3.5))
print(abs(-35))

"""i). round"""

print(round(3.42349238, 4))

"""j). power"""

print(pow(3,5))
print(pow(5,3))

"""7). comparison operators

a). ==
"""

print(1 == 2)
print(1.0 == 1)
print('a' == 'A')
print('True' == 1)
print('False' == 0)

"""b). !="""

print(1 != 2)
print(1.0 != 1)
print('a' != 'A')
print('True' != 1)
print('False' != 0)

"""c). >"""

print(1 > 2)
print(1.0 > 1)
print('a' > 'A')
print(True > 1)
print(False > 0)

"""d). <"""

print(1 < 2)
print(1.0 < 1)
print('a' < 'A')
print(True < 1)
print(False < 0)

"""e). <="""

print(1 <= 2)
print(1.0 <= 1)
print('a' <= 'A')
print(True <= 1)
print(False <= 0)

"""f). >="""

print(1 >= 2)
print(1.0 >= 1)
print('a' >= 'A')
print(True >= 1)
print(False >= 0)

"""8). logical operators

a). and
"""

print(True and True)
print(False and True)
print(True and False)
print(False and False)

"""b). or"""

print(True or True)
print(False or True)
print(True or False)
print(False or False)

"""c). not"""

print( not True)
print( not False)

n = int(input('Enter a number: '))

if (n>=0) and (n<=100) or ((n%5==0) or (n%7==0)) or (n%9==0):
  print('Divisible')

else:
  print('not divisible')

"""9). Typecasting
#int
"""

print('-----------------')
print(3.14)
print(int(3.14))
print(int(' 10 '))
print(int(False))

"""#float"""

print('-----------------')
print(float(3))
print(float(True))
print(float('10.5'))

"""#str"""

print('-----------------')
print(str(123))
print(str(123.33))
print(str(True))

"""#bool"""

print('-----------------')
print(bool(1))
print(bool(100000))
print(bool(-1211))
print(bool(0))
print(bool(0.0))
print(bool(1234.56))
print(bool(""))
print(bool('g'))

"""#exceptions"""

print('----------')
print(int(float('3.14')))
print(float(int(3.14)))

"""# data structures(list)"""

lst = []

for i in range(2,1001,2):
  if(i%7 == 0) and (i%5 == 0):
    lst.append(i)

print(lst)

[70, 140, 210, 280, 350, 420, 490, 560, 630, 700, 770, 840, 910, 980]

primes = []


for n in range(2,1001):

  c = 0

  for i in range(2,n):
    if n%i == 0:
      c += 1

  if c == 0:
    primes.append(n)

print(len(primes))

lst = [34,54,34,54,35,54,34,54]
clean_lst = []

for i in range(len(lst)):
  if lst[i] >= 50:
    clean_lst.append(lst[i]**2)

print(clean_lst)

s = 0

lst = [ [1,2,3],
        [4,5,6],
        [7,8,9]]

for i in range(0,len(lst)):
  for j in range(0,len(lst)):
    if (i+j == len(lst)-1) or (i==j):
      s = s + lst[i][j]


if len(lst)%2 == 0:
  print(s)
else:
  print(s - lst[len(lst)//2][len(lst)//2])

"""#dictionanries"""

#dct = {1:'Ashish', 2:'Manish', 3:'Avneet'}
#dct = {1:'Ashish', 2:'Manish', '3':'Avneet'}
#dct = {1:'Ashish', 2:'Manish', '3':'Avneet', 4:'Avneet'}
#dct = {1:'Ashish', 2:'Manish', 3:'Avneet', 3:'Mohit'}
dct = {1:'Ashish', 2:'Manish', 3:'Avneet', 3:'Mohit', False: 'yes'}

dct

dct = {}

for roll_no  in range(1,6):
  name = input('enter the name of roll no. ' + str(roll_no) + ' :')
dct[roll_no] = name

print(dct)

dct[3] = 'Sohum'

data = {
    1: {'name': 'Ashish', 'phone': 431432513, 'address': 'Noida', 'marks': {'hindi': 34, 'english': 53, 'maths': 53}},
    2: {'name': 'Manish', 'phone': 431432513, 'address': 'Noida', 'marks': {'hindi': 30, 'english': 23, 'maths': 83}},
    3: {'name': 'Mohan', 'phone': 431432513, 'address': 'Noida', 'marks': {'hindi': 43, 'english': 78, 'maths': 15}},
    4: {'name': 'Sohan', 'phone': 9876543210, 'address': 'Delhi', 'marks': {'hindi': 78, 'english': 65, 'maths': 92}},
    5: {'name': 'Rohan', 'phone': 8765432109, 'address': 'Gurugram', 'marks': {'hindi': 67, 'english': 89, 'maths': 76}},
    6: {'name': 'Rahul', 'phone': 7654321098, 'address': 'Faridabad', 'marks': {'hindi': 56, 'english': 78, 'maths': 65}},
    7: {'name': 'Rajesh', 'phone': 6543210987, 'address': 'Ghaziabad', 'marks': {'hindi': 45, 'english': 67, 'maths': 54}},
    8: {'name': 'Rakesh', 'phone': 5432109876, 'address': 'Meerut', 'marks': {'hindi': 89, 'english': 90, 'maths': 87}},
    9: {'name': 'Suresh', 'phone': 4321098765, 'address': 'Agra', 'marks': {'hindi': 78, 'english': 56, 'maths': 67}},
    10: {'name': 'Mahesh', 'phone': 3210987654, 'address': 'Mathura', 'marks': {'hindi': 67, 'english': 45, 'maths': 56}},
    11: {'name': 'Naresh', 'phone': 2109876543, 'address': 'Vrindavan', 'marks': {'hindi': 56, 'english': 34, 'maths': 45}},
    12: {'name': 'Dinesh', 'phone': 1098765432, 'address': 'Aligarh', 'marks': {'hindi': 45, 'english': 23, 'maths': 34}},
    13: {'name': 'Ramesh', 'phone': 987654321, 'address': 'Kanpur', 'marks': {'hindi': 34, 'english': 12, 'maths': 23}},
    14: {'name': 'Kamlesh', 'phone': 876543210, 'address': 'Lucknow', 'marks': {'hindi': 23, 'english': 3, 'maths': 12}},
    15: {'name': 'Vinesh', 'phone': 765432109, 'address': 'Varanasi', 'marks': {'hindi': 12, 'english': 43, 'maths': 3}},
    16: {'name': 'Yogesh', 'phone': 654321098, 'address': 'Prayagraj', 'marks': {'hindi': 3, 'english': 54, 'maths': 12}},
    17: {'name': 'Mukesh', 'phone': 543210987, 'address': 'Gorakhpur', 'marks': {'hindi': 12, 'english': 65, 'maths': 23}},
    18: {'name': 'Dinesh', 'phone': 432109876, 'address': 'Jhansi', 'marks': {'hindi': 23, 'english': 76, 'maths': 34}},
    19: {'name': 'Rakesh', 'phone': 321098765, 'address': 'Bareilly', 'marks': {'hindi': 34, 'english': 87, 'maths': 45}},
    20: {'name': 'Suresh', 'phone': 210987654, 'address': 'Moradabad', 'marks': {'hindi': 45, 'english': 98, 'maths': 56}}
}

for roll_no in range(1,21):
 total_marks = sum(list(data[roll_no]['marks'].values()))
 total_exams = len(data[roll_no]['marks'].values())
 average = round(total_marks/total_exams,2)

 data[roll_no]['average'] = average

 #'average' : round(total_marks/total_exams,2)

 #print('roll no : ', roll_no)
 #print('name    : ', data[roll_no]['name'])
 #print('total marks : ', total_marks)
 #print('average marks :', round(total_marks/total_exams,2))
 #print('-'*50)

data[1]['average'] = average

data[1]

"""roll no : 1
name : Ashish
total marks :
average
----------
roll no : 2
name : Ashish
total marks :
average
-----------
roll no : 3
name : Ashish
total marks :
average



"""



"""ques. check the no. divisible by 5 and 7 or not, if divisible then print print sqaure of it otherwise not divisible"""

n = 35
if((n%5 ==0) and (n%7==0)):
  print(n**2)

else:
  print('not divisible')

""" ques. if the user is eligible for voting
not valid 0-17
not eligible 18-100
otherwise eligible.
write code

"""

age = (int(input('enter your age: ')))

if(age >= 0) and (age <= 17):
  print("not valid age")

elif(age>= 18) and (age<=100):
  print("not eligible")

else:
  print("eligible")

n = 35

if n % 5 == 0 and n % 7 == 0:
    print("Divisible by both 5 and 7")

elif n % 5 == 0 and n % 7 != 0:
    print("Divisible by 5 but not 7")

elif n % 7 == 0 and n % 5 != 0:
    print("Divisible by 7 but not 5")

else:
    print("Not divisible by 5 or 7")

"""doubt"""

n = 7
s = 0

for i in range(1,n+1):
   s = s + i
print(s)

"""doubt
## 1. rolling 2 dices, whats the probability of you getting a sum of 8
## 2. rolling 3 dices, whats the probability of you getting a sum of 9
## 3. check if you've rolling 3 dices , is the probability for getting every number same or not
"""

for i in range(1,7):
  for j in range(1,7):
    for k in range(1,7):
       print(i,j,k)
    print('-'*10)
    print('*'())

"""wap to find the factorial of first n nos."""

n = 5
s = 1

for i in range(1,n+1):
    s *= i
print(s)

"""#STRING

#str concatenation
"""

print('ashish' +' ' + 'jangra' )

"""#string replication"""

print('ashish' * 3)
print('-' * 3)

"""#length"""

print('ashish jangra')
print(len('ashish jangra'))

"""#slicing"""

print('ashish jangra')
print('ashish'[2])
print('ashish'[-2])
print('ashish jangra'[0:6]) #here you need one more space for the ouput
print('ashish jangra'[7:13])
print('ashish jangra'[:6]) #same as first eg
print('ashish jangra'[-5:-1]) #reverse order

"""#case conversion"""

print('ashish jangra'.lower())
print('ashish jangra'[0:6].upper())
print('-' *20)

"""#stripping"""

print('        ashish jangra      '.strip())
print('  ashish   jangra    '.strip())
print('   ashish jangra   ')

"""#replacing"""

print('ashish jangra'.replace('sh','-'))

"""#count"""

print('ashish jangra'.count('s'))
print('ashish jangra'.count('A'))
print('ashish jangra'.lower().count('a'))

"""#find"""

print('ashish jangra'.find('ish'))

"""#check"""

print('ashish'.isalpha())
print('123'.isdigit())
print('ashish jangra'.islower())
print('ashish jangra'.isupper())
print('-'*20)

"""#capitalizing"""

print('ashish jangra'.capitalize())
print('ashish jangra'.title())

"""#check for start and end"""

print('ashish jangra'.startswith('ash'))
print('ashish jangra'.endswith('gra'))

print('ashish jangra'.center(20,'-'))
print('ashish jangra'.ljust(20,'*'))
print('ashish jangra'.rjust(20,'*'))

"""#Variables

ways to assign values to a variable
"""

a = 5
b = 10
print(a**b)
print(a+b)
print(a/b)
print(a-b)
print(a*b)

a = 5
x = 0
y = 0
z = 0
print(a,x,y,z)

x=y=z = 5
print(a,x,y,z)

a,x,y,z = 10,9,8,7
print(a,x,y,z)

#a = int(input("enter first number :"))
#b = int(input("enter second number :"))
#print(a+b)
#print(a/b)
#print(a-b)
#print(a*b)
#print(a//b)

"""airthmetic operations with assignment"""

n = 10
print(n)
n = n + 1
print(n)

